<!-- Copyright (c) Microsoft Corporation.
     Licensed under the MIT License. -->

<!-- Common properties used by most of the C++ projects.
     This ensures we target the same versions and have the right security settings everywhere.
     Some properties may need to be overridden in specific projects.

     BinSkim requires us to use SpectreMitigation, SDLCheck, CETCompat, ControlFlowGuard. -->

<Project>
  <PropertyGroup Label="Globals">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22000.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion>10.0.17763.0</WindowsTargetPlatformMinVersion>
    <WindowsSDKDesktopARMSupport>true</WindowsSDKDesktopARMSupport>
    <WindowsSDKDesktopARM64Support>true</WindowsSDKDesktopARM64Support>

    <!-- We need the SolutionDir for the OutDir to be set correctly.
          It is not defined for cases when we don't use the .sln but specific projects, like some nuget restore. -->
    <SolutionDir Condition=" '$(SolutionDir)' == '' ">$(MSBuildThisFileDirectory)</SolutionDir>

    <IsRelease Condition=" '$(Configuration)' == 'Release' Or '$(Configuration)' == 'ReleaseStatic' ">true</IsRelease>
  </PropertyGroup>

  <PropertyGroup Label="Configuration">
    <!-- Projects for executables override to Application
         Projects for libraries we publish for external use override to DynamicLibrary -->
    <ConfigurationType>StaticLibrary</ConfigurationType>

    <PlatformToolset>v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '16.0'">v142</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '17.0'">v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>

    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\$(MSBuildProjectName)\</OutDir>
    <!-- TODO: Maybe we should rename this platform to x86 -->
    <OutDir Condition=" '$(Platform)' == 'Win32' ">$(SolutionDir)x86\$(Configuration)\$(MSBuildProjectName)\</OutDir>
  </PropertyGroup>

  <PropertyGroup Label="Configuration" Condition=" '$(IsReleaseConfiguration)' == 'true' ">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
    <RunCodeAnalysis>false</RunCodeAnalysis>
  </PropertyGroup>

  <PropertyGroup Label="Configuration" Condition=" '$(Configuration)' == 'Debug' ">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>$(SolutionDir)CodeAnalysis.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisTreatWarningsAsErrors>true</CodeAnalysisTreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup  Label="Configuration" Condition=" '$(Configuration)' == 'Fuzzing' ">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>false</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
    <!-- Enable address sanitizer -->
    <EnableASAN>true</EnableASAN>
  </PropertyGroup>

  <!-- Security settings required by BinSkim -->
  <PropertyGroup>
    <SpectreMitigation>Spectre</SpectreMitigation>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <SDLCheck>true</SDLCheck>
      <ControlFlowGuard Condition=" '$(IsReleaseConfiguration)' == true ">Guard</ControlFlowGuard>
    </ClCompile>
    <Link>
      <CETCompat>true</CETCompat>
    </Link>
  </ItemDefinitionGroup>

  <!-- Compilation settings -->
  <ItemDefinitionGroup>
    <ClCompile>
      <LanguageStandard>stdcpp17</LanguageStandard>

      <!-- /bigobj increases the number of sections that an object file can contain. -->
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>

      <!-- Use precompiled header if the project has one -->
      <PrecompiledHeader Condition="Exists('pch.h')">Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>

      <!-- Be strict about compilation warnings -->
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>

      <!-- Disables non-standard conforming code -->
      <ConformanceMode>true</ConformanceMode>

      <!-- Macros used in pipelines to control build behavior -->
      <PreprocessorDefinitions Condition=" '$(WingetDisableTestHooks)' == 'true' ">AICLI_DISABLE_TEST_HOOKS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition=" '$(WingetDisableExperimentalFeatures)' == 'true' ">WINGET_DISABLE_EXPERIMENTAL_FEATURES;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition=" '$(WingetEnableReleaseBuild)' == 'true' ">WINGET_ENABLE_RELEASE_BUILD;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition=" '$(UseProdCLSIDs)' == 'true' ">USE_PROD_CLSIDS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition=" '$(UseProdWingetServer)' == 'true' ">USE_PROD_WINGET_SERVER;%(PreprocessorDefinitions)</PreprocessorDefinitions>

      <!-- Unclear what this is used for, but Visual Studio adds it so... -->
      <PreprocessorDefinitions Condition=" '$(Platform)' == 'Win32' ">WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>

      <!-- Enable in specific projects if needed -->
      <RuntimeTypeInfo>false</RuntimeTypeInfo>

      <!-- This causes the VC runtime to be linked statically -->
      <RuntimeLibrary Condition=" '$(Configuration)' == 'ReleaseStatic' ">MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup >
    <ClCompile>
    </ClCompile>
  </ItemDefinitionGroup>

  <!-- Enable optimizations for release builds -->
  <ItemDefinitionGroup Condition=" '$(IsReleaseConfiguration)' == true ">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalOptions>/debug:full /debugtype:cv,fixup /incremental:no %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>

  <!-- Disable optimizations for debug builds -->
  <ItemDefinitionGroup Condition=" '$(Configuration)' == 'Debug' ">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <!-- Enable Native Code Analysis. This requires more space than is available on release build machines, so we only use it for debug. -->
      <EnablePREfast>true</EnablePREfast>
    </ClCompile>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup Condition=" '$(Configuration)' == 'Fuzzing' ">
    <ClCompile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>%(AdditionalOptions) /fsanitize-coverage=inline-8bit-counters /fsanitize-coverage=edge /fsanitize-coverage=trace-cmp /fsanitize-coverage=trace-div</AdditionalOptions>
    </ClCompile>
  </ItemDefinitionGroup>
</Project>